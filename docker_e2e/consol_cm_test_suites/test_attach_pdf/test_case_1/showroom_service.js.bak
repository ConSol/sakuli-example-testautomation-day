
_dynamicInclude($includeFolder);
var testCase = new TestCase(60, 70);
var env = new Environment();
var screen = new Region();



var browserType = "Firefox"; 
var pdfType = "pdfeditor";

var pdfViewer;

var pdfFileName = "ConSol_Solutions-Sakuli.pdf";
var $username = "sakuli";
var $password = "5akuli";

var $Kommentator = "Max Mustermann";
var $Kommentar = "End2End";


try {
	//killklauncher();
	var browser = Application(browserType);
	
	//navigatePDF();

	load();
	login(3);
	//checkTicket();
	env.sleep(5);
	end();
    
} catch (e) {
    testCase.handleException(e);
} finally {
    end();
}


function navigatePDF()
{
	var pdfFileLocation = testCase.getTestCaseFolderPath() + "/pdf/" + pdfFileName;
	Logger.logInfo(pdfFileLocation);
	openPdfFile(pdfFileLocation);
	pdfViewer = Application(pdfType);
	pdfViewer.focus();
	
	writeAnnotation();

	safePdf();

	env.sleep(1);

	pdfViewer.close();  
	
}


function safePdf()
{

	screen.waitForImage("pdf_file",3).click();
	screen.waitForImage("pdf_save_as",3).click();
	
	screen.waitForImage("pdf_path",10).click();

	env.sleep(2);
 	
	env.paste(testCase.getTestCaseFolderPath() + "/pdf/");	
	env.paste($Kommentator + "_" + pdfFileName);
	env.sleep(1);
	screen.waitForImage("pdf_safe_button",2).click();

	var exists = screen.exists("replace", 1);
	 if (exists) {
	 exists.click();
	 }
}

function writeAnnotation()
{
	var exists = screen.exists("pdf_add_annotation", 5);
	 if (exists) {
	 exists.click();
	 }
	else
	{
		var window = Region(pdfViewer);
		screen.waitForImage("pdf_maximize",5).click();
			
	}
	screen.waitForImage("pdf_add_annotation",5).click();
	screen.waitForImage("pdf_sakuli",2).click();
	screen.waitForImage("pdf_note_click",2).click();
	env.paste($Kommentar);
	env.type(" - "+ $Kommentator);
}

function logout()
{	
	_click(_image("logout.png"));
}

function end()
{
	logout();
	testCase.saveResult();
    try {
        //browser.close();
	} 
	catch (e) {
	//do not handle exception, this is just a teardown
	Logger.logInfo(e);
	}
}


function load()
{
	_navigateTo("http://10.4.14.128:8080/cm-client/");
	_call(top.location.reload());
	testCase.endOfStep("Load Consol CM");
}

function login(attemt)
{
	env.sleep(2);
	_focus(_textbox("username"));
	_click(_textbox("username"));
	env.type($username); //paste ist stabiler als type
	if(_assertEqual(_getValue(_textbox("username")), $username))
	{
		_setValue(_textbox("username"), $username);
	}	
	_setValue(_password("password"), $password);
	env.sleep(1)
	env.type(Key.ENTER);
	try
	{
		_highlight(_span("Angemeldet als:"));
		_highlight(_span("user"));
	}
	catch(e)
	{
		if(attemt>0)
		{
			var a = attemt--;
			login(a);
		}
		else
		{
			end();
			testCase.handleException(e);
			return;
		}
	}
	testCase.endOfStep("Login");
}


function navigateTicket()
{	
	writeComment();
	checkComment();
	testCase.endOfStep("Navigate Ticket");

}


function writeComment()
{
	_highlight(_link("Kommentar"));
	_click(_link("Kommentar"));
	_highlight(_div(0, _in(_iframe("text_ifr"))));
	_click(_div(0, _in(_iframe("text_ifr"))));
	env.type($comment);
	_highlight(_button("Hinzuf端gen"));
	env.sleep(0);
	_click(_button("Hinzuf端gen"));
}

function checkComment()
{
	_highlight(_div("submain historygroup"));
	env.sleep(1);
	$testString = _getText(_div("/richContent_.*/", _div("submain historygroup")));
	_highlight(_div("/richContent_.*/", _div("submain historygroup")));

	var isIdentical = false;
	if($testString == $comment)
	{
		isIdentical = true;

	}
	else
	{
		Logger.logError("The Comment Function did not perform correctly.")
	}
}

function uploadAttachment()
{
	_click(_link("Attachment"));
	env.sleep(1);
	_focus(_textbox(0,_rightOf(_cell("Beschreibung"))));	
	env.type("Consol Solutions");
	env.sleep(1);
	_click(_file("upload"));
	
	screen.waitForImage("dialog_savePath.png", 20).click();
	env.sleep(1);
	env.paste("/root/sakuli/showroom/case_pdf/test/downloads/");
	env.type(Key.ENTER);
	env.sleep(1);
	screen.waitForImage("dialog_file.png", 20).doubleClick();
}

function increasePriority()
{
	var $link;
	if(_exists(_link(">>> Beantworten, zur端ck...")))
	{
		$link = _link(">>> Beantworten, zur端ck...");
	}
	else
	{
		$link = _link("ENGLISCHER LINK");
	}
	_highlight($link);
	env.sleep(1);
	_click($link);
}


function search(attemt)
{	
	try
	{
	_focus(_textbox("navBar:navSearch:searchField"));
	env.sleep(2);
	env.type("Sa");
	env.sleep(3);
	
	_highlight(_div("528", _in(_row("/gs_row gs_item .*/"))));
	env.sleep(2);
	_click(_div("528", _in(_row("/gs_row gs_item .*/"))));
	env.sleep(5);
	testCase.endOfStep("Search",30);

	}
	catch(e)
	{
		if(attemt>0)
		{
			var a = attemt--;
			search(a);
		}
		else
		{
			end();
			testCase.handleException(e);
			return;
		}
	}
}


function openPdfFile(pdfFileLocation) {
    var appPdfReader = new Application( pdfType +' "'+ pdfFileLocation + '"');
    appPdfReader.open();
    return appPdfReader;
}

